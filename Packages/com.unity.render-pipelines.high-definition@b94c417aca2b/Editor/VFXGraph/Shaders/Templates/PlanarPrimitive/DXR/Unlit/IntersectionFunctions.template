            // Needs to be included after the VFX includes
            #include "Packages/com.unity.visualeffectgraph/Shaders/VFXRayTracingCommon.hlsl"
            // Visibility function required for the intersection shader
            bool AABBPrimitiveIsVisible(RayTracingProceduralData rtProceduralData, float2 uv)
            {
            #if VFX_USE_GRAPH_VALUES
                uint instanceActiveIndex = asuint(_InstanceActiveIndex);
                ${VFXLoadGraphValues}
            #endif
                VFXAttributes attributes = rtProceduralData.attributes;
            #if USE_FLIPBOOK
                ${VFXLoadParameter:{invFlipBookSize}}
                ${VFXLoadParameter:{flipBookSize}}
                #if USE_FLIPBOOK_INTERPOLATION
                    VFXUVData uvData = GetUVData(flipBookSize, invFlipBookSize, uv, attributes.texIndex, attributes.texIndexBlend);
                #else
                    VFXUVData uvData = GetUVData(flipBookSize, invFlipBookSize, uv, attributes.texIndex);
                #endif
                uv = uvData.uvs.xy;
            #endif
            #if USE_ALPHA_TEST
                ${VFXLoadParameter:{alphaThreshold}}

                float textureAlpha = 1.0f;
                #if USE_BASE_COLOR_MAP_ALPHA
                    textureAlpha = SampleTexture(VFX_SAMPLER(mainTexture), uv, 0).a;
                #endif
                return attributes.alpha * textureAlpha > alphaThreshold;
            #else
                return true;
            #endif
            }
